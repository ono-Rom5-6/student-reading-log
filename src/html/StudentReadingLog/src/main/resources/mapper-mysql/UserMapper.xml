<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.readinglog.repository.UserMapper">
	<resultMap type="spring.readinglog.domain.user.model.User"
		id="user">
		<id column="id" property="id" />
		<result column="user" property="user" />
		<result column="pass" property="pass" />
		<result column="student_number" property="studentNumber" />
		<result column="name" property="name" />
		<result column="authority" property="authority" />
	</resultMap>

	<resultMap
		type="spring.readinglog.domain.user.model.Member"
		id="member">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="numberOfBooksReadThisMonth"
			property="numberOfBooksReadThisMonth" />
	</resultMap>

	<select id="findLoginUser" parameterType="String"
		resultMap="user">
		select
			*
		from
			users
			where user = #{user}
	</select>

	<select id="findPasswordByName" parameterType="String"
		resultType="String">
		select
			pass
		from
			users
			where user = #{user}
	</select>

	<update id="updatePass">
		update
			users
		set
			pass = #{pass}
			where user = #{user}
	</update>

	<select id="selectMemberList"
		resultMap="member">
		select
			users.id, users.name, count(s1.finished_date)  as
			numberOfBooksReadThisMonth
		from(
			select
				user_id, finished_date
			from
				reading_records
			where
				reading_records.finished_date
			between
				date_format(curdate(),'%Y-%m-01')
			and
				curdate()
			)as s1
		right outer join
			users
		on
			s1.user_id = users.id
		where
			users.authority = "GENERAL"
		group by
			users.id
		order by
			numberOfBooksReadThisMonth
			desc
	</select>
</mapper>